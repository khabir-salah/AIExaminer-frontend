@page "/AssessmentResult"
@layout UserLayout



@if (isLoading)
{
    <div class="loading-overlay">
        <div class="loading-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <h3 class="loading-text">Please wait while we accumulate the Result...</h3>
        </div>
    </div>
}

else if (showModal)
{
    <div class="modal fade show" style="display:block;" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Assessment Score</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body text-center">
                    <!-- Circular Score Display -->
                    <div class="circular-score">
                        @_result.AssessmentResult.Score%
                    </div>
                    <p>Do you want to try again or view your corrections?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="() => TryAgain(_result.AssessmentResult.AssesmentId)">Try Again</button>
                    <button class="btn btn-primary" @onclick="ViewCorrection">View Correction</button>
                </div>
            </div>
        </div>
    </div>

}

@if (showCorrections)
{
    <div class="container mt-3">
        <h3>Review Your Assessment</h3>

        @foreach (var question in _result.AssessmentResult.Questions)
        {
            <div class="card my-3">
                <div class="card-body">
                    <h5 class="card-title">@question.QuestionText</h5>

                    <ul class="list-group">
                        @foreach (var option in question.Options)
                        {
                            <li class="list-group-item 
                                @(question.UserAnswer == option.Text ? (question.UserAnswer == question.Answer ? "list-group-item-success" : "list-group-item-danger") : "")">
                                @option.Text
                            </li>
                        }
                    </ul>

                    <div class="mt-3">
                        <strong>Correct Answer: </strong> @question.Answer
                        <br />
                        <strong>Explanation: </strong> @question.Explanation
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    [Inject] ResultViewModel _result { get; set; } = default!;
    private bool showModal = true; // To control the visibility of the modal


    private void CloseModal()
    {
        showModal = false;
    }

    private void ViewCorrection()
    {
        showModal = false; // Close the modal
        showCorrections = true; // Show corrections
    }

    private bool showCorrections = false; // Control for displaying corrections

    private void TryAgain(Guid AssessmentId)
    {
        // Logic to restart the assessment or load a new one
        navigationManager.NavigateTo($"/RetakeAssessment/{AssessmentId}");
    }

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000);

        if (_result.AssessmentResult != null)
        {
            isLoading = false;
        }
        else
        {
            isLoading = false;
        }
    }

}


